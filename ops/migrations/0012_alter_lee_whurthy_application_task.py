# Generated by Django 4.0.4 on 2022-05-09 02:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ops', '0011_alter_lee_whurthy_application'),
    ]

    operations = [
        migrations.AlterField(
            model_name='lee',
            name='whurthy_application',
            field=models.CharField(choices=[('CCL', 'CCL'), ('Events', 'Events'), ('Ops', 'Ops'), ('Users', 'Users'), ('Other', 'Other')], default='CCL', help_text='Please select the application that this entry applies to.', max_length=100, verbose_name='CCL Application'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_title', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('task_description', tinymce.models.HTMLField(blank=True, default='', null=True)),
                ('assigned_team', models.CharField(blank=True, default='', help_text='\n        If you have many teams collaborating in Whurthy you can enter in the Team name. This will allow you to \n        filter by team in the task list. \n        ', max_length=50, null=True)),
                ('task_status', models.CharField(choices=[('1) Not started', '1) Not started'), ('2) In progress', '2) In progress'), ('3) Deferred', '3) Deferred'), ('Completed', 'Completed')], default='1) Not started', max_length=20)),
                ('task_priority', models.CharField(choices=[('1) High', '1) High'), ('2) Normal', '2) Normal'), ('3) Low', '3) Low')], default='2) Normal', help_text="Selecting '1) High' will not only place the task higher in the task list but will also result in it showing in the 'My High Priority' section of the dashboard.", max_length=20)),
                ('due_date', models.DateField(blank=True, help_text='Enter the date you are aiming to complete this task by.', null=True)),
                ('task_type', models.CharField(choices=[('---', '---'), ('Prepayment', 'Prepayment'), ('Wait List', 'Wait List'), ('Survey', 'Survey'), ('ALAN', 'ALAN'), ('Cancellation Request', 'Cancellation Request'), ('Cancellation Action', 'Cancellation Action')], default='---', max_length=50)),
                ('response_satisfaction', models.CharField(choices=[('---', '---'), ('1) Thumbs up', '1) Thumbs up'), ('2) Neutral', '2) Neutral'), ('3) Thumbs down', '3) Thumbs down')], default='---', help_text='How do you rate your support experience?', max_length=20)),
                ('response_comments', models.TextField(blank=True, help_text='Please share any specific feedback about your support experience.', null=True)),
                ('cancellation_reason', models.TextField(blank=True, help_text='What is the reason for this cancellation? Remember that the reason entered will be used as a part \n        of automatically notifying customers that their event booking has been cancelled.', null=True)),
                ('cancel_request_decision', models.CharField(choices=[('---', '---'), ('Approved', 'Approved'), ('Declined', 'Declined')], default='---', max_length=20)),
                ('cancel_request_decision_comments', models.TextField(blank=True, default='', null=True)),
                ('cancel_request_actions_taken', models.TextField(blank=True, default='', null=True)),
                ('cancel_request_notification', models.CharField(choices=[('---', '---'), ('Automated Notification', 'Automated Notification'), ('Manual Notification', 'Manual Notification')], default='---', help_text='Selecting <Automated Notification> will result in all customers with the Notification Preference \n        of SMS or Email being automatically notified. You will need to follow up with those Customers who have None \n        as their Notification Preference. If you select <Manual Notification> it assumed you will notify each customer \n        of their cancelled booking.', max_length=40)),
                ('cancel_request_cancellation', models.CharField(choices=[('---', '---'), ('Automated Booking Cancellation', 'Automated Booking Cancellation'), ('Manual Booking Cancellation', 'Manual Booking Cancellation')], default='---', help_text='Selecting <Automated Booking Cancellation> will result all listed events and event bookings set \n        to the status of cancelled. If you select <Manual Booking Cancellation> it assumed you will manually cancel the \n        event and all associated event bookings.', max_length=40)),
                ('automated_activity', models.TextField(blank=True, default='', null=True)),
                ('automation_email_flag', models.BooleanField(default=False)),
                ('automation_sms_flag', models.BooleanField(default=False)),
                ('automation_notification_flag', models.BooleanField(default=False)),
                ('automation_booking_cancel_flag', models.BooleanField(default=False)),
                ('task_created_date', models.DateTimeField(auto_now_add=True)),
                ('assigned_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Assigned to')),
                ('related_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approval_task', to='ops.task')),
            ],
            options={
                'ordering': ['task_status', 'task_priority', 'due_date'],
            },
        ),
    ]
